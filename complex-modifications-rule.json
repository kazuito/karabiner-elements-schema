{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "$defs": {
    "stringArray": {
      "type": "array",
      "items": { "type": "string" }
    },
    "keyCode": {
      "type": "string",
      "enum": [
        "caps_lock",
        "left_control",
        "left_shift",
        "left_option",
        "left_command",
        "right_control",
        "right_shift",
        "right_option",
        "right_command",
        "fn",
        "return_or_enter",
        "escape",
        "delete_or_backspace",
        "delete_forward",
        "tab",
        "spacebar",
        "hyphen",
        "equal_sign",
        "open_bracket",
        "close_bracket",
        "backslash",
        "non_us_pound",
        "semicolon",
        "quote",
        "grave_accent_and_tilde",
        "comma",
        "period",
        "slash",
        "non_us_backslash",
        "up_arrow",
        "down_arrow",
        "left_arrow",
        "right_arrow",
        "page_up",
        "page_down",
        "home",
        "end",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "0",
        "f1",
        "f2",
        "f3",
        "f4",
        "f5",
        "f6",
        "f7",
        "f8",
        "f9",
        "f10",
        "f11",
        "f12",
        "f13",
        "f14",
        "f15",
        "f16",
        "f17",
        "f18",
        "f19",
        "f20",
        "f21",
        "f22",
        "f23",
        "f24",
        "display_brightness_decrement",
        "display_brightness_increment",
        "mission_control",
        "launchpad",
        "dashboard",
        "illumination_decrement",
        "illumination_increment",
        "rewind",
        "play_or_pause",
        "fastforward",
        "mute",
        "volume_decrement",
        "volume_increment",
        "eject",
        "apple_display_brightness_decrement",
        "apple_display_brightness_increment",
        "apple_top_case_display_brightness_decrement",
        "apple_top_case_display_brightness_increment",
        "keypad_num_lock",
        "keypad_slash",
        "keypad_asterisk",
        "keypad_hyphen",
        "keypad_plus",
        "keypad_enter",
        "keypad_1",
        "keypad_2",
        "keypad_3",
        "keypad_4",
        "keypad_5",
        "keypad_6",
        "keypad_7",
        "keypad_8",
        "keypad_9",
        "keypad_0",
        "keypad_period",
        "keypad_equal_sign",
        "keypad_comma",
        "vk_none",
        "print_screen",
        "scroll_lock",
        "pause",
        "insert",
        "application",
        "help",
        "power",
        "execute",
        "menu",
        "select",
        "stop",
        "again",
        "undo",
        "cut",
        "copy",
        "paste",
        "find",
        "international1",
        "international2",
        "international3",
        "international4",
        "international5",
        "international6",
        "international7",
        "international8",
        "international9",
        "lang1",
        "lang2",
        "lang3",
        "lang4",
        "lang5",
        "lang6",
        "lang7",
        "lang8",
        "lang9",
        "japanese_eisuu",
        "japanese_kana",
        "japanese_pc_nfer",
        "japanese_pc_xfer",
        "japanese_pc_katakana",
        "keypad_equal_sign_as400",
        "locking_caps_lock",
        "locking_num_lock",
        "locking_scroll_lock",
        "alternate_erase",
        "sys_req_or_attention",
        "cancel",
        "clear",
        "prior",
        "return",
        "separator",
        "out",
        "oper",
        "clear_or_again",
        "cr_sel_or_props",
        "ex_sel",
        "left_alt",
        "left_gui",
        "right_alt",
        "right_gui",
        "vk_consumer_brightness_down",
        "vk_consumer_brightness_up",
        "vk_mission_control",
        "vk_launchpad",
        "vk_dashboard",
        "vk_consumer_illumination_down",
        "vk_consumer_illumination_up",
        "vk_consumer_previous",
        "vk_consumer_play",
        "vk_consumer_next",
        "volume_down",
        "volume_up"
      ]
    },
    "modifierKey": {
      "type": "string",
      "enum": [
        "caps_lock",
        "left_command",
        "left_control",
        "left_option",
        "left_shift",
        "right_command",
        "right_control",
        "right_option",
        "right_shift",
        "fn",
        "command",
        "control",
        "option",
        "shift",
        "left_alt",
        "left_gui",
        "right_alt",
        "right_gui",
        "any"
      ]
    },
    "modifierKeyArray": {
      "type": "array",
      "items": { "$ref": "#/$defs/modifierKey" }
    },
    "pointingButton": {
      "type": "string"
    },
    "toRule": {
      "type": "object",
      "properties": {
        "key_code": { "$ref": "#/$defs/keyCode" },
        "consumer_key_code": { "$ref": "#/$defs/keyCode" },
        "pointing_button": { "$ref": "#/$defs/pointingButton" },
        "apple_vendor_keyboard_key_code": { "type": "string" },
        "shell_command": {
          "description": "Shell command which you want to execute.",
          "type": "string"
        },
        "select_input_source": {
          "description": "Caution: Switching to input sources which have input_mode_id (Chinese, Japanese, Korean, Vietnamese) may be failed due to a macOS issue. For CJKV input sources, sending the input source switch shortcut (e.g., control-space) is better than using `select_input_source`. https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to/select-input-source/",
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "The language regex such as \"^en$\", \"^fr$\""
            },
            "input_source_id": {
              "type": "string",
              "description": "The input source id regex such as \"^com\\.apple\\.keylayout\\.US$\""
            },
            "input_mode_id": {
              "type": "string",
              "description": "The input mode id regex such as \"^com\\.apple\\.inputmethod\\.Japanese\\.Hiragana$\""
            }
          }
        },
        "set_variable": {
          "type": "object",
          "required": ["name"],
          "properties": {
            "name": {
              "description": "Target variable name.",
              "type": "string"
            },
            "value": {
              "description": "Target variable value."
            },
            "key_up_value": {
              "description": "A variable value when key is up."
            },
            "type": { "type": "string", "enum": ["set", "unset"] }
          }
        },
        "mouse_key": {
          "type": "object",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "vertical_wheel": {
              "type": "number"
            },
            "horizontal_wheel": {
              "type": "number"
            },
            "speed_multiplier": {
              "type": "number"
            }
          }
        },
        "sticky_modifier": {
          "type": "object"
        },
        "software_function": {
          "type": "object",
          "properties": {
            "cg_event_double_click": {
              "type": "object",
              "required": ["button"],
              "properties": {
                "button": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 31
                }
              },
              "additionalProperties": false
            },
            "iokit_power_management_sleep_system": {
              "type": "object",
              "properties": {
                "delay_milliseconds": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "additionalProperties": false
            },
            "open_application": {
              "type": "object",
              "properties": {
                "bundle_identifier": { "type": "string" },
                "file_path": { "type": "string" },
                "frontmost_application_history_index": {
                  "type": "integer",
                  "minimum": 1
                }
              },
              "anyOf": [
                { "required": ["bundle_identifier"] },
                { "required": ["file_path"] },
                { "required": ["frontmost_application_history_index"] }
              ],
              "additionalProperties": false
            },
            "set_mouse_cursor_position": {
              "type": "object",
              "required": ["x", "y"],
              "properties": {
                "x": {
                  "oneOf": [
                    { "type": "integer" },
                    {
                      "type": "string",
                      "pattern": "^[0-9]{1,3}%$"
                    }
                  ]
                },
                "y": {
                  "oneOf": [
                    { "type": "integer" },
                    {
                      "type": "string",
                      "pattern": "^[0-9]{1,3}%$"
                    }
                  ]
                },
                "screen": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "maxProperties": 1
        },
        "modifiers": {
          "$ref": "#/$defs/modifierKeyArray"
        },
        "lazy": {
          "description": "If true, the key event will be sent lazily (after a short delay).",
          "type": "boolean"
        },
        "repeat": {
          "type": "boolean"
        },
        "halt": {
          "type": "boolean"
        },
        "hold_down_milliseconds": {
          "type": "integer"
        },
        "conditions": {
          "$ref": "#/$defs/conditionArray"
        }
      }
    },
    "toRuleArray": {
      "type": "array",
      "items": { "$ref": "#/$defs/toRule" }
    },
    "condition": {
      "oneOf": [
        {
          "type": "object",
          "required": ["type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "frontmost_application_if",
                "frontmost_application_unless"
              ]
            },
            "bundle_identifiers": { "$ref": "#/$defs/stringArray" },
            "file_paths": { "$ref": "#/$defs/stringArray" },
            "description": { "type": "string" }
          }
        },
        {
          "type": "object",
          "required": ["type", "identifiers"],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "device_if",
                "device_unless",
                "device_exists_if",
                "device_exists_unless"
              ]
            },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "vendor_id": { "type": "integer" },
                  "product_id": { "type": "integer" },
                  "device_address": { "type": "string" },
                  "location_id": { "type": "integer" },
                  "is_keyboard": { "type": "boolean" },
                  "is_pointing_device": { "type": "boolean" },
                  "is_game_pad": { "type": "boolean" },
                  "is_consumer": { "type": "boolean" },
                  "is_touch_bar": { "type": "boolean" },
                  "is_built_in_keyboard": { "type": "boolean" }
                },
                "additionalProperties": false
              },
              "minItems": 1
            },
            "description": { "type": "string" }
          }
        },
        {
          "type": "object",
          "required": ["type", "keyboard_types"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["keyboard_type_if", "keyboard_type_unless"]
            },
            "keyboard_types": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["ansi", "iso", "jis"]
              },
              "minItems": 1
            },
            "description": {
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "required": ["type", "input_sources"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["input_source_if", "input_source_unless"]
            },
            "input_sources": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "language": { "type": "string" },
                  "input_source_id": { "type": "string" },
                  "input_mode_id": { "type": "string" }
                },
                "additionalProperties": false
              },
              "minItems": 1
            },
            "description": {
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "required": ["type", "name", "value"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["variable_if", "variable_unless"]
            },
            "name": {
              "type": "string"
            },
            "value": {
              "oneOf": [
                { "type": "integer" },
                { "type": "boolean" },
                { "type": "string" }
              ]
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": ["type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["event_changed_if", "event_changed_unless"]
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "conditionArray": {
      "type": "array",
      "items": { "$ref": "#/$defs/condition" }
    }
  },
  "type": "object",
  "required": ["description", "manipulators"],
  "additionalProperties": false,
  "properties": {
    "description": {
      "description": "The description of the rule.",
      "type": "string"
    },
    "manipulators": {
      "description": "The key manipulators.",
      "type": "array",
      "items": {
        "type": "object",
        "required": ["type", "from"],
        "properties": {
          "type": {
            "description": "The type of manipulation. Currently, only `basic` is available",
            "type": "string",
            "enum": ["basic"]
          },
          "from": {
            "description": "The name of key code, consumer key code or pointing button which you want to change",
            "type": "object",
            "properties": {
              "key_code": {
                "description": "Key code which you want to change",
                "$ref": "#/$defs/keyCode"
              },
              "consumer_key_code": { "$ref": "#/$defs/keyCode" },
              "pointing_button": { "$ref": "#/$defs/pointingButton" },
              "any": {
                "description": "https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/any/",
                "type": "string",
                "enum": ["key_code", "consumer_key_code", "pointing_button"]
              },
              "modifiers": {
                "description": "Specify mandatory and optional modifiers. https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/",
                "type": "object",
                "properties": {
                  "mandatory": {
                    "description": "Modifiers which must be pressed",
                    "$ref": "#/$defs/modifierKeyArray"
                  },
                  "optional": {
                    "description": "Modifiers which can be pressed",
                    "$ref": "#/$defs/modifierKeyArray"
                  }
                }
              },
              "simultaneous": {
                "description": "Specify multiple events which are pressed simultaneously. https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/simultaneous/",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key_code": { "$ref": "#/$defs/keyCode" }
                  }
                }
              },
              "simultaneous_options": {
                "description": "Options for `simultaneous`.",
                "type": "object",
                "properties": {
                  "detect_key_down_uninterruptedly": {
                    "description": "Specify whether key_down detection is interrupted with unrelated events.",
                    "type": "boolean"
                  },
                  "key_down_order": {
                    "description": "Restriction of key_down order.",
                    "type": "string",
                    "enum": ["insensitive", "strict", "strict_inverse"]
                  },
                  "key_up_order": {
                    "description": "Restriction of key_up order.",
                    "type": "string",
                    "enum": ["insensitive", "strict", "strict_inverse"]
                  },
                  "key_up_when": {
                    "description": "When key_up events are posted.",
                    "type": "string",
                    "enum": ["any", "all"]
                  },
                  "to_after_key_up": {
                    "description": "Events will be posted when all `from` events are released.",
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "to": {
            "description": "Events which are sent when you press `from` key",
            "$ref": "#/$defs/toRuleArray"
          },
          "to_if_alone": {
            "description": "Events which are sent when you press `from` key alone",
            "$ref": "#/$defs/toRuleArray"
          },
          "to_if_held_down": {
            "description": "Events which are sent when you hold down `from` key",
            "$ref": "#/$defs/toRuleArray"
          },
          "to_after_key_up": {
            "description": "Events which are sent after you release `from` key",
            "$ref": "#/$defs/toRuleArray"
          },
          "to_delayed_action": {
            "description": "Events which are sent after 500 milliseconds at you press `from` key",
            "$ref": "#/$defs/toRuleArray"
          },
          "conditions": {
            "description": "Manipulator is applied only if condition is matched (e.g., the frontmost application)",
            "$ref": "#/$defs/conditionArray"
          },
          "parameters": {
            "description": "Override parameters such as `to_if_alone_timeout_milliseconds`"
          },
          "description": {
            "description": "A human-readable comment",
            "type": "string"
          }
        }
      }
    }
  }
}
